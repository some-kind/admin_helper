- name: "Создание директории для prometheus"
  ansible.builtin.file:
    path: "{{ docker_data }}/prometheus"
    state: directory
    force: no

- name: "Создание директории для дашбордов"
  ansible.builtin.file:
    path: "{{ docker_data }}/dashboards"
    state: directory
    force: no

- name: "Создание директории для данных grafana"
  ansible.builtin.file:
    path: "{{ grafana_data }}"
    state: directory
    force: no
    mode: "o=rwx,g=rwx,a=rwx"

- name: "Создание дашборда Node Exporter Full"
  ansible.builtin.copy:
    src: "Node_exporter_FULL.json"
    dest: "{{ docker_data }}/dashboards/Node_exporter_FULL.json"

- name: "Создание провайдера дашбордов"
  ansible.builtin.copy:
    src: "dashboard.yaml"
    dest: "{{ docker_data }}/dashboard.yaml"

- name: "Связывание Grafana и Prometheus"
  ansible.builtin.template:
    src: "datasource.yaml.j2"
    dest: "{{ docker_data }}/datasource.yaml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "o=rw,g=r,a=r"

- name: "Создание docker-compose файла"
  ansible.builtin.template:
    src: "docker-compose.j2"
    dest: "{{ docker_data }}/docker-compose.yml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "o=rw,g=r,a=r"

- name: "Создание конфига prometheus"
  ansible.builtin.template:
    src: "prometheus.yml.j2"
    dest: "{{ docker_data }}/prometheus/prometheus.yml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "o=rw,g=r,a=r"

- name: "Сборка контейнера из docker-compose файла"
  ansible.builtin.command: "docker compose -f {{ docker_data }}/docker-compose.yml up -d"
  register: compose_result
  ignore_errors: yes

- name: "Проверка успешности запуска контейнеров"
  ansible.builtin.debug:
    msg: "Контейнеры успешно запущены"
  when: compose_result.rc == 0

- name: "Обработка ошибки запуска контейнеров"
  ansible.builtin.fail:
    msg: "Не удалось запустить контейнеры"
  when: compose_result.rc != 0